#version 330

layout (location = 0) in vec3 vertex_position;
layout (location = 1) in vec3 vertex_normal;
layout (location = 2) in vec2 vertex_texture;

uniform mat4 proj, view, model;

out vec3 vertPos;
out vec2 TexCoord;
out vec3 norm;

void main(){
	mat4 ModelViewMatrix = view * model;
	mat3 NormalMatrix =  mat3(ModelViewMatrix);
    gl_Position = proj * view * model * vec4(vertex_position, 1.0);
	vec4 positionToCam =  ModelViewMatrix * vec4(vertex_position, 1.0);
    vec4 vertPos4 = view * vec4(vertex_position, 1.0);
    vertPos = vec3(vertPos4)/vertPos4.w;
	norm =  NormalMatrix * vertex_normal;
	TexCoord = vertex_texture;
}